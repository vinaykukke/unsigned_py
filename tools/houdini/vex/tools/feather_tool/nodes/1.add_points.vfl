float scale_min = chf("scale_min");
float scale_max = chf("scale_max");
int scale_seed = chi("scale_seed");
float scale_barbs = chf("scale_barbs");
float scale_ramp = chramp("scale_ramp", f@s);
float random_scale_ramp = chramp("random_scale_ramp", f@s);
float random_number = i@pid + rand(i@pid*scale_seed + 11) * 11;

float random_scale = fit01(rand(@ptnum+random_number), scale_min, scale_max) * random_scale_ramp * f@random_painted_scale;
float scale = scale_barbs * scale_ramp * f@painted_scale + random_scale;

/** Creating the Geometry*/
int prim = addprim(0, "polyline");

/** Adds point and moves them along the desired direction */
int new_point = addpoint(0, @P + v@dir * scale);

/** Creates a line between our current point and new point */
addvertex(0, prim, @ptnum);
addvertex(0, prim, new_point);

/** Add all the newly created primitives into their own group */
setprimgroup(0, "barb_group", prim, 1);

/** 
 * All the created attributes do not get transfered if geometry is created in code,
 * so they must be transfered manually.
 * ************************************************************
 * Transfer all the attributes to the newly created points.
 */
setpointattrib(0, "s", new_point, f@s, "set");
setpointattrib(0, "edge_dir", new_point, v@edge_dir, "set");
setpointattrib(0, "dir", new_point, v@dir, "set");
setpointattrib(0, "avg_n", new_point, v@avg_n, "set");
setpointattrib(0, "pid", new_point, i@pid, "set");
setpointattrib(0, "root_pt", new_point, i@root_pt, "set");
setpointattrib(0, "goal_pt", new_point, i@goal_pt, "set");
setpointattrib(0, "check_pts", new_point, i[]@check_pts, "set");
setpointattrib(0, "pts", new_point, i[]@pts, "set");
setpointattrib(0, "painted_concave", new_point, i@painted_concave, "set");
setpointattrib(0, "side", new_point, i@side, "set");
setpointattrib(0, "base_pt", new_point, i@base_pt, "set");